package cc.whohow.postgresql.logging;

import cc.whohow.postgresql.proxy.WrapperStatement;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class LoggingStatement extends WrapperStatement {
    private static final Logger log = LogManager.getLogger("pg.sql.statement");

    public LoggingStatement(Statement statement) {
        super(statement);
    }

    @Override
    public ResultSet executeQuery(String sql) throws SQLException {
        log.debug(sql);
        return statement.executeQuery(sql);
    }

    @Override
    public int executeUpdate(String sql) throws SQLException {
        log.debug(sql);
        return statement.executeUpdate(sql);
    }

    @Override
    public boolean execute(String sql) throws SQLException {
        log.debug(sql);
        return statement.execute(sql);
    }

    @Override
    public void addBatch(String sql) throws SQLException {
        log.debug(sql);
        statement.addBatch(sql);
    }

    @Override
    public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
        log.debug(sql);
        return statement.executeUpdate(sql, autoGeneratedKeys);
    }

    @Override
    public int executeUpdate(String sql, int[] columnIndexes) throws SQLException {
        log.debug(sql);
        return statement.executeUpdate(sql, columnIndexes);
    }

    @Override
    public int executeUpdate(String sql, String[] columnNames) throws SQLException {
        log.debug(sql);
        return statement.executeUpdate(sql, columnNames);
    }

    @Override
    public boolean execute(String sql, int autoGeneratedKeys) throws SQLException {
        log.debug(sql);
        return statement.execute(sql, autoGeneratedKeys);
    }

    @Override
    public boolean execute(String sql, int[] columnIndexes) throws SQLException {
        log.debug(sql);
        return statement.execute(sql, columnIndexes);
    }

    @Override
    public boolean execute(String sql, String[] columnNames) throws SQLException {
        log.debug(sql);
        return statement.execute(sql, columnNames);
    }

    @Override
    public long executeLargeUpdate(String sql) throws SQLException {
        log.debug(sql);
        return statement.executeLargeUpdate(sql);
    }

    @Override
    public long executeLargeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
        log.debug(sql);
        return statement.executeLargeUpdate(sql, autoGeneratedKeys);
    }

    @Override
    public long executeLargeUpdate(String sql, int[] columnIndexes) throws SQLException {
        log.debug(sql);
        return statement.executeLargeUpdate(sql, columnIndexes);
    }

    @Override
    public long executeLargeUpdate(String sql, String[] columnNames) throws SQLException {
        log.debug(sql);
        return statement.executeLargeUpdate(sql, columnNames);
    }
}
